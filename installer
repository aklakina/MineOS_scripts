#!/bin/bash

z=0
IFS=$'\n'
if [ -f /usr/local/bin/home ]; then 
	home=$(cat /usr/local/bin/home)
else
	home=$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )
	echo $home > /usr/local/bin/home
fi
chmod -wx /usr/local/bin/home
echo "Do you want to install all of the components?(Y/N)"
while [[ z -lt 1 ]]
do
	read -n 1 k
	if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
		z=1
		for a in $(cat $home/crontabs.txt)
		do
			if cat /var/spool/cron/crontabs/root | grep -q $home/$a; then
				z=1
			else
				if [[ $a == "auto_backup" ]]; then
					touch /usr/local/bin/default_path.txt
					if [[ $(cat /usr/local/bin/default_path.txt) == "" ]]; then
						echo "Please define the default backup path:"
						read backup_path
						echo $backup_path > /usr/local/bin/default_path.txt
						echo ""
						echo "Please define how many backups you want to keep:"
						read k
						echo $k >> /usr/local/bin/default_path.txt
						echo ""
					fi
					echo "Please define which time interval should it run in the format of each x-th day. (only write the x)"
					read korte
					kortes=1
					while [[ $kortes -lt 29 ]]
					do
						if [[ $kort == "" ]]; then
							kort=$kortes
						else
							kort="$kort,$kortes"
						fi
						let "kortes=$kortes+$korte"
					done
					echo "* * $kort * * $home/$a" >> /var/spool/cron/crontabs/root
				else
					echo "0,5,10,15,20,25,30,35,40,45,50,55 * * * * $home/$a" >> /var/spool/cron/crontabs/root
				fi
			fi
		done
		for a in $(cat $home/to_the_bin.txt)
		do
			cp $home/$a /usr/local/bin/$a
			chmod +x /usr/local/bin/$a
		done
		chmod +x $(ls)
		z=0
		echo "Please define a webhook url for the discord channel you want the notifications to be pushed in.(You can define more then one and if you are done press Enter!)"
		while [[ $z -lt 1 ]]
		do
			read k
			if [[ $k == "" ]]; then
				z=1
			else
				echo $k>>$home/url.txt
			fi
		done
		echo "Your clone is now updated/installed!"
	else
		if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
			z=1
			touch $home/missingcrontabs.txt
			for a in  $(cat $home/crontabs.txt)
			do
				if cat /var/spool/cron/crontabs/root | grep -q $home/$a; then
					t=1
				else
					echo $a >> $home/missingcrontabs.txt
				fi
			done
			if [ -s $home/missingcrontabs.txt ]; then
				echo " "
				echo "Please define which scripts do you want to crontab.(They will be ran every 5 minutes)"
				for a in $(cat $home/missingcrontabs.txt)
				do
					echo " "
					echo "$a?(Y/N)"
					z=0
					while [[ z -lt 1 ]]
					do
						read -n 1 k
						if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
							z=1
							if [[ $a == "auto_backup" ]]; then
								touch /usr/local/bin/default_path.txt
								if [[ $(cat /usr/local/bin/default_path.txt) == "" ]]; then
									echo "Please define the default backup path:"
									read backup_path
									echo $backup_path > /usr/local/bin/default_path.txt
									echo ""
									echo "Please define how many backups you want to keep:"
									read k
									echo $k >> /usr/local/bin/default_path.txt
									echo ""
								fi
								for a in $(ls -d */ | cut -d '/' -f1)
								do
									echo "Do you want the server $a to be backed up? (press enter if you want the previous settings) [y/n]"
									b=0
									while [[ $b -lt 1 ]]
									do
										read -n 1 k
										if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
											b=1
											rm /var/games/minecraft/servers/$a/logs/nobackup
										else
											if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
												b=1
												touch /var/games/minecraft/servers/$a/logs/nobackup
											else
												if [[ "$k" == "" ]]; then
													break
												fi
											fi
										fi
									done
								done
								echo "Please define which time interval should it run in the format of each x-th day"
								read korte
								while [[ $kortes -lt 29 ]]
								do
									if [[ $kort == "" ]]; then
										kort=$kortes
									else
										kort="$kort,$kortes"
									fi
									let "kortes=$kortes+$korte"
								done
								echo "* * $kort * * $home/$a" >> /var/spool/cron/crontabs/root
							else
								echo "0,5,10,15,20,25,30,35,40,45,50,55 * * * * $home/$a" >> /var/spool/cron/crontabs/root
								if [[ $a == "scheduled_restart_on_change" ]]; then
									echo "Please define when do you want to restart your server on change in seconds or in hh:mm format or leave it bank for default. (The default is 7200 seconds)"
									read timer
									if [[ $timer == "" ]]; then
										t=1
									else
										echo $timer &> $home/default_timer.txt
									fi
								fi
							fi
						else
							if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
								z=1
							fi
						fi
					done
				done
			fi
			rm $home/missingcrontabs.txt
			echo " "
			echo "Please define for each script if you want them in your default path folder so you will be able to call them just by their name in the terminal."
			for a in $(cat $home/to_the_bin.txt)
			do
				k=$(sha1sum /usr/local/bin/$a)
				o=$(sha1sum $home/$a)
				if [[ "$k" == "$o" ]]; then
					l=1
				else
					echo " "
					echo "$a?(Y/N)"
					z=0
					while [[ z -lt 1 ]]
					do
						read -n 1 k
						if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
							z=1
							cp $home/$a /usr/local/bin/$a
							chmod +x /usr/local/bin/$a
						else
							if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
								z=1
							fi
						fi
					done
				fi
			done
			if [[ $(cat $home/url.txt) == "" ]]; then
				chmod +x $(ls)
				echo " "
				z=0
				echo "Please define a webhook url for the discord channel you want the notifications to be pushed in.(You can define more then one and if you are done press Enter!)"
				while [[ $z -lt 1 ]]
				do
					read k
					if [[ $k == "" ]]; then
						z=1
					else
						echo $k>>$home/url.txt
					fi
				done
			else
				z=0
				echo "You already have entered a discord webhook. Do you want to add another one or replace the existing one?"
				while [[ $z -lt 1 ]]
				do
					read -n 1 k
					if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
						z=1
						rm $home/url.txt
						read o
						echo $o>>$home/url.txt
					else
						if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
							z=1
						fi
					fi
				done
			fi
		fi
	fi
done
echo "Your clone is now updated/installed!"
echo "Do you want to start mc_command_handler? (If it already ran then this will restart it) [Y/N]"
z=0
while [[ z -lt 1 ]]
do
	read -n 1 k
	if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
		z=1
		for i in $(ps -eaf | grep "$(ps -eaf | grep "/var/games/minecraft/servers/.*/logs" | tr -s ' ' | cut -d ' ' -f3)" | tr -s ' ' | cut -d ' ' -f2)
		do
			kill $i
		done
		kill $(ps -eaf | grep "/bin/bash .*/mc_command_handler" | tr -s ' ' | cut -d ' ' -f2)
		($home/mc_command_handler)&
	else
		if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
			z=1
		fi
	fi
done
if cat $home/default_props.txt | grep -q "server-ip="; then
	z=0
	echo "You have already set up your servers ip. Do you want to reset it?"
	while [[ z -lt 1 ]]
	do
		read -n 1 k
		if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
			z=1
			cp $home/default_props.txt $home/temp_default_props.txt
			rm $home/default_props.txt
			cd /var/games/minecraft/servers/
			for a in $(ls -d */ | cut -d '/' -f1)
			do
				rm /var/games/minecraft/servers/$a/logs/ran
			done
			for i in $(cat $home/temp_default_props.txt)
			do
				if $i | grep -q "server-ip="; then
					z=1
				else
					echo $i>>$home/default_props.txt
				fi
			done
			echo "Please write here your new ip"
			read k
			echo "server-ip=$k" >> $home/default_props.txt
		else
			if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
				z=1
			fi
		fi
	done
fi
echo "Do you want to start server_prop_changer? (If it already ran then this will restart it) [Y/N]"
z=0
while [[ z -lt 1 ]]
do
	read -n 1 k
	if [[ "$k" == "y" ]] || [[ "$k" == "Y" ]]; then
		z=1
		for i in $(ps -eaf | grep "$(ps -eaf | grep "/var/games/minecraft/servers/.*/ran" | tr -s ' ' | cut -d ' ' -f3)" | tr -s ' ' | cut -d ' ' -f2)
		do
			kill $i
		done
		($home/server_prop_changer)&
	else
		if [[ "$k" == "n" ]] || [[ "$k" == "N" ]]; then
			z=1
		fi
	fi
done